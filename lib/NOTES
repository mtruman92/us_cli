Goal: To build a ruby gem that provides a command line interface (CLI) that scrapes data from an external website 
e.g: https://www.history.com/topics/us-states and allows the user to interact with the CLI to follow commands and receive outputs.

Steps
1. Choose a topic : I chose the United States as my topic because I feel this captures interesting facts and knowledge about 50 states all in one area. 
2. Build your gem using bundler: Using the learn platform, I created my gem. In the terminal I executed the following:
- bundle gem us_cli (bundle gem + name of the gem I'm creating
- follow prompts : test -> Y/N; MIT License -> Y/N; Code of Conduct -> Y/N 
- terminal initalizes git repon -> gem is set up for git 
- cd into new folder created -> cd us_cli
3. Open up Github 
4. Create a new repository 
5. Name the repository -> Create
6. Create the repository on the command line in learn IDE 
- git add . -> stages changes made
-git commit -m "first commit" -> invokes commit changes allowing you to enter messages of what was done
-git remote add origin "git path provided" -> set the repository as the repository for that folder
-git push -u origin master -> pushes commit to Github 
7. Open repository on Learn IDE by 
-cd into folder
-make necessary changes
-----------------------------------------------------------------------------------------------------------------------------------
1. Created a bin file : The executable goes into the bin directory (united-states) without ruby file extension -> allows us to execute our CLI 
2. Tell bin to interpret the file as ruby : "#!/usr/bin/env ruby" -> shebang line
3. module.class(UsCLI)::CLI -> that I can instantiate and then use the call method to run/start the program ->UsCLI::CLI.new.call
                                (Start programming into this object)
4. Tells interface to go into lib directory and tell it to load file within this directory -> require './lib/us_cli'
5. us-cli.rb ->  puts require-relative to allow execution of files within directory.
6. Within all my classes - I included method definitions which serve as instance methods on instances of the class. 

